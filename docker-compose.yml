services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: peer
      POSTGRES_PASSWORD: peer
      POSTGRES_DB: peer
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      retries: 5
    ports: ["5432:5432"]

  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    env_file: 
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    ports: ["8000:8000"]

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on: 
      - backend
    environment:
      NEXT_PUBLIC_GRAPHQL_ENDPOINT: http://localhost:8000/graphql
    ports: ["3000:3000"]

volumes:
  pgdata:
  frontend_node_modules:
